name: Build and Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build binaries
        run: |
          VERSION="${{ steps.version.outputs.version }}"

          # Build for multiple platforms
          GOOS=linux GOARCH=amd64 go build -ldflags "-s -w" -o gosmtp-dup-linux-amd64 .
          GOOS=linux GOARCH=arm64 go build -ldflags "-s -w" -o gosmtp-dup-linux-arm64 .
          GOOS=windows GOARCH=amd64 go build -ldflags "-s -w" -o gosmtp-dup-windows-amd64.exe .
          GOOS=darwin GOARCH=amd64 go build -ldflags "-s -w" -o gosmtp-dup-darwin-amd64 .
          GOOS=darwin GOARCH=arm64 go build -ldflags "-s -w" -o gosmtp-dup-darwin-arm64 .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            gosmtp-dup-*
            config-example.yaml
          generate_release_notes: true
          draft: false
          prerelease: false

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: build-binaries
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Buildah
        run: |
          sudo apt-get update
          sudo apt-get install -y buildah

      - name: Log in to Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | buildah login --username ${{ github.actor }} --password-stdin ${{ env.REGISTRY }}

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "latest=latest" >> $GITHUB_OUTPUT

      - name: Build and push with Buildah
        run: |
          IMAGE_NAME="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          VERSION="${{ steps.version.outputs.version }}"

          # Build the image
          buildah build-using-dockerfile \
            --tag "${IMAGE_NAME}:${VERSION}" \
            --tag "${IMAGE_NAME}:latest" \
            .

          # Push both tags
          buildah push "${IMAGE_NAME}:${VERSION}"
          buildah push "${IMAGE_NAME}:latest"